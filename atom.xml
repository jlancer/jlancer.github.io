<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>顺势而为</title>
  
  <subtitle>凡生所求何其多，非所需也，实不知足也。安康故吾愿，富贵未可期，明心之所欲，虽蹒跚前行，终不悔矣</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2021-09-02T01:19:38.219Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>jlancer</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>网络抓包实践</title>
    <link href="http://yoursite.com/2021/09/01/%E7%BD%91%E7%BB%9C%E6%8A%93%E5%8C%85%E5%AE%9E%E8%B7%B5/"/>
    <id>http://yoursite.com/2021/09/01/网络抓包实践/</id>
    <published>2021-09-01T10:22:40.000Z</published>
    <updated>2021-09-02T01:19:38.219Z</updated>
    
    <content type="html"><![CDATA[<p>开发中使用网络抓包工具，可以大大提高数据联调的效率，以下就是在实践中使用较好的网络抓包工具介绍。</p><a id="more"></a><h2 id="Charles"><a href="#Charles" class="headerlink" title="Charles"></a>Charles</h2><ul><li>Charles基于java开发，使用非常简单，适用于http/https</li></ul><h3 id="安装Charles"><a href="#安装Charles" class="headerlink" title="安装Charles"></a>安装Charles</h3><ul><li>一般在官网下载，如果不激活的话，启动会延迟30秒，并且运行半个小时就会强制退出</li><li>可以使用网上提供的序列号破解，或者替换破解的charles.jar文件</li></ul><h3 id="Windows和Mac本机抓包"><a href="#Windows和Mac本机抓包" class="headerlink" title="Windows和Mac本机抓包"></a>Windows和Mac本机抓包</h3><p>http抓包只需要设置Charles为系统代理：Proxy -&gt; Windows Proxy或者Proxy -&gt; macOS Proxy<br><img src="https://raw.githubusercontent.com/jlancer/MyPictureBed/master/blogs/16304760519953.jpg" alt></p><p>https抓包首先安装SSL证书<br><img src="https://raw.githubusercontent.com/jlancer/MyPictureBed/master/blogs/19323119-f4a44bff45231ebb.png" alt></p><p>Mac、Windows都需要信任证书<br><img src="https://raw.githubusercontent.com/jlancer/MyPictureBed/master/blogs/16304747750960.jpg" alt><br><img src="https://raw.githubusercontent.com/jlancer/MyPictureBed/master/blogs/19323119-3fb10bedfa617aaf.png" alt></p><p>然后编辑需要抓包的https域名和端口<br><img src="https://raw.githubusercontent.com/jlancer/MyPictureBed/master/blogs/16304779178979.jpg" alt></p><p>可以解除所有域名ssl加密<br><img src="https://raw.githubusercontent.com/jlancer/MyPictureBed/master/blogs/16304780857949.jpg" alt></p><p>也可以只解除单个域名ssl加密<br><img src="https://raw.githubusercontent.com/jlancer/MyPictureBed/master/blogs/16304782960916.jpg" alt></p><p><strong>VPN配合抓包</strong></p><p>VPN和Charles同时使用会出现优先级问题，解决方法是让请求先通过Charles，Charles再转发给VPN。<br>这就需要将系统代理设置为Charles，Charles在设置外部代理为VPN，最终访问网络的是VPN，Charles作为前置代理。</p><p>首先先关闭VPN应用作为系统代理的设置，比如：</p><p>使用V2aryU需要到设置里关闭自动代理配置<br><img src="https://raw.githubusercontent.com/jlancer/MyPictureBed/master/blogs/16304798573320.jpg" alt><br>ClashX Pro<br><img src="https://raw.githubusercontent.com/jlancer/MyPictureBed/master/blogs/16304796258441.jpg" alt></p><p>然后设置Charles为系统代理：Proxy -&gt; Windows Proxy或者Proxy -&gt; macOS Proxy<br>最后添加Charles外部代理：</p><p><img src="https://raw.githubusercontent.com/jlancer/MyPictureBed/master/blogs/16304789761281.jpg" alt><br><img src="https://raw.githubusercontent.com/jlancer/MyPictureBed/master/blogs/16304789924167.jpg" alt><br><img src="https://raw.githubusercontent.com/jlancer/MyPictureBed/master/blogs/16304790002076.jpg" alt></p><p>外部代理地址就是127.0.0.1，端口则是VPN应用设置的代理端口，Windows环境下一样原理，重要的还是注意系统代理有没有设置为Charles。</p><h3 id="移动端抓包"><a href="#移动端抓包" class="headerlink" title="移动端抓包"></a>移动端抓包</h3><p>检查本机监听的端口<br><img src="https://raw.githubusercontent.com/jlancer/MyPictureBed/master/blogs/16304757479569.jpg" alt><br><img src="https://raw.githubusercontent.com/jlancer/MyPictureBed/master/blogs/16304757353012.jpg" alt></p><p>获取本机ip地址<br><img src="https://raw.githubusercontent.com/jlancer/MyPictureBed/master/blogs/16304812150155.jpg" alt><br><img src="https://raw.githubusercontent.com/jlancer/MyPictureBed/master/blogs/16304813638427.jpg" alt></p><p>安装ssl证书<br><img src="https://raw.githubusercontent.com/jlancer/MyPictureBed/master/blogs/16304813134397.jpg" alt><br><img src="https://raw.githubusercontent.com/jlancer/MyPictureBed/master/blogs/16304813246930.jpg" alt></p><p>在同一网络环境下（可以是同一Wi-Fi或者电脑共享网络），设置手机HTTP代理<br>iOS点击“设置-&gt;无线局域网-&gt;连接的WiFi”，比如：<br>服务器为电脑IP地址：如192.168.1.169<br>端口：本机监听的端口，一般为8888<br><img src="https://raw.githubusercontent.com/jlancer/MyPictureBed/master/blogs/1918076-1f5d80ae48f8c75d.png" alt></p><p>Android<br><img src="https://raw.githubusercontent.com/jlancer/MyPictureBed/master/blogs/19323119-be453d71d23de69d.png" alt></p><p>然后在浏览器输入<strong>chls.pro/ssl</strong>，根据提示下载安装证书，Android如果浏览器无法下载，建议换第三方浏览器试试，安装后同样要信任证书</p><p>iOS需要在”设置→通用→关于本机→证书信任设置”里面启用完全信任Charles证书<br><img src="https://raw.githubusercontent.com/jlancer/MyPictureBed/master/blogs/2469183-34036db0a6b76448.png" alt></p><p>Android在安装证书的过程中一般都会询问是否信任证书，也可以使用<a href="https://github.com/NVISOsecurity/MagiskTrustUserCerts" target="_blank" rel="noopener">MagiskTrustUserCerts</a>，将证书直接放入系统根证书存储，当然使用root后的手机更方便</p><p>这些设置都完成，使用手机访问网络出现<br><img src="https://raw.githubusercontent.com/jlancer/MyPictureBed/master/blogs/16304824915207.jpg" alt></p><p>点击“Allow”允许，就出现手机的请求列表了<br>如果手机抓包也有VPN需求，手机本身不需要设置VPN，只需要像电脑VPN配合抓包一样，给Charles添加外部代理。</p><h3 id="常用功能"><a href="#常用功能" class="headerlink" title="常用功能"></a>常用功能</h3><p><strong>模拟弱网</strong><br><img src="https://raw.githubusercontent.com/jlancer/MyPictureBed/master/blogs/16304835637123.jpg" alt><br>有一些预设的网络环境，也可以自定义<br><img src="https://raw.githubusercontent.com/jlancer/MyPictureBed/master/blogs/16304836300935.jpg" alt></p><p><strong>重发请求</strong><br>后端调试方便使用<br><img src="https://raw.githubusercontent.com/jlancer/MyPictureBed/master/blogs/16304847193994.jpg" alt><br><img src="https://raw.githubusercontent.com/jlancer/MyPictureBed/master/blogs/16304848654759.jpg" alt></p><p><strong>转发请求</strong><br><img src="https://raw.githubusercontent.com/jlancer/MyPictureBed/master/blogs/9481801-ab923c98d9d4e42f.png" alt><br><img src="https://raw.githubusercontent.com/jlancer/MyPictureBed/master/blogs/9481801-836ea6a168f45e35.png" alt></p><p><strong>请求断点调试</strong><br><img src="https://raw.githubusercontent.com/jlancer/MyPictureBed/master/blogs/16304845609563.jpg" alt></p><p>请求断点后，在请求时可以修改请求头，返回时则可以修改返回数据等，功能非常强大，不过现在很多App内置证书进行Api验证或者Api数据加密混淆，都无法有效抓取。Charles还有其他更多功能，需要自己发掘使用。</p><h2 id="其他一些抓包工具介绍"><a href="#其他一些抓包工具介绍" class="headerlink" title="其他一些抓包工具介绍"></a>其他一些抓包工具介绍</h2><h3 id="Wireshark"><a href="#Wireshark" class="headerlink" title="Wireshark"></a>Wireshark</h3><ul><li>Wireshark作用在本机网卡上，适用于长连接、http等，缺点就是使用复杂，需要学习专门的过滤语法，但功能强大</li><li>Wireshark免费且开源，直接官网下载即可</li></ul><h3 id="tcpdump"><a href="#tcpdump" class="headerlink" title="tcpdump"></a>tcpdump</h3><ul><li>tcpdump是Unix/Linux下的抓包工具，也支持跨平台使用，主要是命令行使用，可以针对指定网卡、端口、协议进行抓包</li><li>但tcpdump缺少GUI，用来抓取数据非常方便，分析数据没有Wireshark方便</li></ul><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>总的来说一般简单的http/https抓包需求使用Charles就可以了，Charles使用简单功能强大，但是有socket长连接开发调试需求时，需要使用Wireshark才能解决问题，最后还是不能抓到数据，tcpdump也可以试试。</p><p>测试人员也可以学习使用Charles等抓包工具，通过数据抓包可以大致分析bug来自服务端，还是前端或者移动端，提高排查bug的效率。其他功能比如模拟弱网、重发请求、转发请求等，也都可以大大提高开发和测试效率。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;开发中使用网络抓包工具，可以大大提高数据联调的效率，以下就是在实践中使用较好的网络抓包工具介绍。&lt;/p&gt;
    
    </summary>
    
      <category term="开发笔记" scheme="http://yoursite.com/categories/%E5%BC%80%E5%8F%91%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="Tool" scheme="http://yoursite.com/tags/Tool/"/>
    
  </entry>
  
  <entry>
    <title>iOS调用第三方地图导航</title>
    <link href="http://yoursite.com/2018/08/02/iOS%E8%B0%83%E7%94%A8%E7%AC%AC%E4%B8%89%E6%96%B9%E5%9C%B0%E5%9B%BE%E5%AF%BC%E8%88%AA/"/>
    <id>http://yoursite.com/2018/08/02/iOS调用第三方地图导航/</id>
    <published>2018-08-02T03:13:56.000Z</published>
    <updated>2021-09-01T09:49:49.713Z</updated>
    
    <content type="html"><![CDATA[<p>现在很多App都有地图导航功能，而实现导航两种实现方式：<strong>集成第三方SDK</strong>、<strong>URL Sheme跳转第三方应用</strong>，集成第三方SDK略显复杂，URL Sheme跳转相对简单，以下收集了腾讯地图、Google地图、高德地图、百度地图、系统地图的URL Sheme。</p><a id="more"></a><h1 id="坐标转换"><a href="#坐标转换" class="headerlink" title="坐标转换"></a>坐标转换</h1><p>国内大多地图产品都使用<code>GCJ-02</code>坐标体系，如高德、Google、腾讯等，这些地图产品的坐标基本可以通用，但百度在<code>GCJ-02</code>(火星坐标)进行了偏移，造成百度的坐标只适用于百度地图相关产品。所以在调用之前需注意App提供的坐标是否符合调用的第三方应用坐标体系，以下是转换的方法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line"> *  将GCJ-02坐标转换为BD-09坐标 即将高德地图上获取的坐标转换成百度坐标</span><br><span class="line"> */</span><br><span class="line">- (CLLocationCoordinate2D)gcj02CoordianteToBD09:(CLLocationCoordinate2D)gdCoordinate</span><br><span class="line">&#123;</span><br><span class="line">    double x_PI = M_PI * 3000 /180.0;</span><br><span class="line">    double gd_lat = gdCoordinate.latitude;</span><br><span class="line">    double gd_lon = gdCoordinate.longitude;</span><br><span class="line">    </span><br><span class="line">    double z = sqrt(gd_lat * gd_lat + gd_lon * gd_lon) + 0.00002 * sin(gd_lat * x_PI);</span><br><span class="line">    double theta = atan2(gd_lat, gd_lon) + 0.000003 * cos(gd_lon * x_PI);</span><br><span class="line">    </span><br><span class="line">    return CLLocationCoordinate2DMake(z * sin(theta) + 0.006, z * cos(theta) + 0.0065);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> *  将BD-09坐标转换为GCJ-02坐标 即将百度地图上获取的坐标转换成高德地图的坐标</span><br><span class="line"> */</span><br><span class="line">- (CLLocationCoordinate2D)bd09CoordinateToGCJ02:(CLLocationCoordinate2D)bdCoordinate</span><br><span class="line">&#123;</span><br><span class="line">    double x_PI = M_PI * 3000 /180.0;</span><br><span class="line">    double bd_lat = bdCoordinate.latitude - 0.006;</span><br><span class="line">    double bd_lon = bdCoordinate.longitude - 0.0065;</span><br><span class="line">    </span><br><span class="line">    double z = sqrt(bd_lat * bd_lat + bd_lon * bd_lon) + 0.00002 * sin(bd_lat * x_PI);</span><br><span class="line">    double theta = atan2(bd_lat, bd_lon) + 0.000003 * cos(bd_lon * x_PI);</span><br><span class="line">    </span><br><span class="line">    return CLLocationCoordinate2DMake(z * cos(theta), z * sin(theta));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="URL配置"><a href="#URL配置" class="headerlink" title="URL配置"></a>URL配置</h1><p>各地图产品配置基本差不多，如需要更详细的参数配置需查阅其文档即可</p><h2 id="腾讯地图"><a href="#腾讯地图" class="headerlink" title="腾讯地图"></a><a href="http://lbs.qq.com/uri_v1/guide-mobile.html" target="_blank" rel="noopener">腾讯地图</a></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">if ([[UIApplication sharedApplication] canOpenURL:[NSURL URLWithString:@&quot;qqmap://&quot;]]) &#123;</span><br><span class="line">        </span><br><span class="line">        [actionSheet addActionWithTitle:@&quot;腾讯地图&quot;</span><br><span class="line">                                  style:UIAlertActionStyleDefault</span><br><span class="line">                                handler:^(UIAlertAction * _Nonnull action) &#123;</span><br><span class="line">                                    NSString *urlString = [NSString stringWithFormat:@&quot;qqmap://map/routeplan?type=drive&amp;fromcoord=CurrentLocation&amp;tocoord=%f,%f&amp;from=我的位置&amp;to=%@&amp;referer=OB4BZ-D4W3U-B7VVO-4PJWW-6TKDJ-WPB77&quot;,</span><br><span class="line">                               self.selectAnimatedAnnotation.coordinate.latitude,</span><br><span class="line">                               self.selectAnimatedAnnotation.coordinate.longitude,</span><br><span class="line">                               self.selectAnimatedAnnotation.station_address];</span><br><span class="line">                                    urlString = [urlString stringByAddingPercentEncodingWithAllowedCharacters:[NSCharacterSet URLQueryAllowedCharacterSet]];</span><br><span class="line">                                    </span><br><span class="line">                                    [[UIApplication sharedApplication] openURL:[NSURL URLWithString:urlString]];</span><br><span class="line">                                &#125;];</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h2 id="Google-地图"><a href="#Google-地图" class="headerlink" title="Google 地图"></a><a href="https://developers.google.com/maps/documentation/urls/ios-urlscheme" target="_blank" rel="noopener">Google 地图</a></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">if ([[UIApplication sharedApplication] canOpenURL:[NSURL URLWithString:@&quot;comgooglemaps://&quot;]]) &#123;</span><br><span class="line">        </span><br><span class="line">        [actionSheet addActionWithTitle:@&quot;Google 地图&quot;</span><br><span class="line">                                  style:UIAlertActionStyleDefault</span><br><span class="line">                                handler:^(UIAlertAction * _Nonnull action) &#123;</span><br><span class="line">                                    NSString *urlString = [NSString stringWithFormat:@&quot;comgooglemaps://?sll=%f,%f&amp;daddr=%@&amp;directionsmode=driving&quot;,</span><br><span class="line">                               self.selectAnimatedAnnotation.coordinate.latitude,</span><br><span class="line">                               self.selectAnimatedAnnotation.coordinate.longitude,</span><br><span class="line">                               self.selectAnimatedAnnotation.station_address];</span><br><span class="line">                                    urlString = [urlString stringByAddingPercentEncodingWithAllowedCharacters:[NSCharacterSet URLQueryAllowedCharacterSet]];</span><br><span class="line">                                    </span><br><span class="line">                                    [[UIApplication sharedApplication] openURL:[NSURL URLWithString:urlString]];</span><br><span class="line">                                &#125;];</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h2 id="高德地图"><a href="#高德地图" class="headerlink" title="高德地图"></a><a href="https://lbs.amap.com/api/amap-mobile/guide/ios/ios-uri-information" target="_blank" rel="noopener">高德地图</a></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">if ([[UIApplication sharedApplication] canOpenURL:[NSURL URLWithString:@&quot;iosamap://&quot;]]) &#123;</span><br><span class="line">        </span><br><span class="line">        [actionSheet addActionWithTitle:@&quot;高德地图&quot;</span><br><span class="line">                                  style:UIAlertActionStyleDefault</span><br><span class="line">                                handler:^(UIAlertAction * _Nonnull action) &#123;</span><br><span class="line">                                    [NSString stringWithFormat:@&quot;iosamap://path?sourceApplication=测试App&amp;sid=BGVIS1&amp;sname=我的位置&amp;did=BGVIS2&amp;dlat=%lf&amp;dlon=%lf&amp;dname=%@&amp;t=0&quot;,</span><br><span class="line">                               self.selectAnimatedAnnotation.coordinate.latitude,</span><br><span class="line">                               self.selectAnimatedAnnotation.coordinate.longitude,</span><br><span class="line">                               self.selectAnimatedAnnotation.station_address];</span><br><span class="line">                                    urlString = [urlString stringByAddingPercentEncodingWithAllowedCharacters:[NSCharacterSet URLQueryAllowedCharacterSet]];</span><br><span class="line">                                    </span><br><span class="line">                                    [[UIApplication sharedApplication]openURL:[NSURL URLWithString:urlString]];</span><br><span class="line">                                &#125;];</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h2 id="百度地图"><a href="#百度地图" class="headerlink" title="百度地图"></a><a href="http://lbsyun.baidu.com/index.php?title=uri/api/ios" target="_blank" rel="noopener">百度地图</a></h2><p>百度地图自带有坐标类型的选择，详情请查阅百度地图文档中<code>coord_type</code>参数说明。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">if ([[UIApplication sharedApplication] canOpenURL:[NSURL URLWithString:@&quot;baidumap://&quot;]]) &#123;</span><br><span class="line">        </span><br><span class="line">        CLLocationCoordinate2D coordinatefrom = [self gcj02CoordianteToBD09:self.userLocation.coordinate];</span><br><span class="line">        CLLocationCoordinate2D coordinateto = [self gcj02CoordianteToBD09:CLLocationCoordinate2DMake(self.latitude.doubleValue, self.longitude.doubleValue)];</span><br><span class="line">        [actionSheet addActionWithTitle:@&quot;百度地图&quot;</span><br><span class="line">                                  style:UIAlertActionStyleDefault</span><br><span class="line">                                handler:^(UIAlertAction * _Nonnull action) &#123;</span><br><span class="line">                                    [NSString stringWithFormat:@&quot;baidumap://map/direction?origin=&#123;&#123;我的位置&#125;&#125;&amp;destination=latlng:%f,%f|name:%@&amp;mode=driving&amp;coord_type=gcj02&quot;,</span><br><span class="line">                               self.selectAnimatedAnnotation.coordinate.latitude,</span><br><span class="line">                               self.selectAnimatedAnnotation.coordinate.longitude,</span><br><span class="line">                               self.selectAnimatedAnnotation.station_address];</span><br><span class="line">                                    urlString = [urlString stringByAddingPercentEncodingWithAllowedCharacters:[NSCharacterSet URLQueryAllowedCharacterSet]];</span><br><span class="line">                                    </span><br><span class="line">                                    [[UIApplication sharedApplication]openURL:[NSURL URLWithString:urlString]];</span><br><span class="line">                                &#125;];</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h2 id="系统地图"><a href="#系统地图" class="headerlink" title="系统地图"></a><a href="https://developer.apple.com/library/archive/featuredarticles/iPhoneURLScheme_Reference/MapLinks/MapLinks.html" target="_blank" rel="noopener">系统地图</a></h2><p>iOS 10以后系统地图也可以删除了，也可做一下安装判断。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">if ([[UIApplication sharedApplication] canOpenURL:[NSURL URLWithString:@&quot;http://maps.apple.com/&quot;]]) &#123;</span><br><span class="line">        </span><br><span class="line">        [actionSheet addActionWithTitle:@&quot;Apple 地图&quot;</span><br><span class="line">                                  style:UIAlertActionStyleDefault</span><br><span class="line">                                handler:^(UIAlertAction * _Nonnull action) &#123;</span><br><span class="line">                                    // 苹果</span><br><span class="line">                                    NSString *urlString = [NSString stringWithFormat:@&quot;http://maps.apple.com/?dirflg=d&amp;daddr=%f,%f&quot;,</span><br><span class="line">                               self.selectAnimatedAnnotation.coordinate.latitude,</span><br><span class="line">                               self.selectAnimatedAnnotation.coordinate.longitude];</span><br><span class="line">                                    urlString = [urlString stringByAddingPercentEncodingWithAllowedCharacters:[NSCharacterSet URLQueryAllowedCharacterSet]];</span><br><span class="line">                                    </span><br><span class="line">                                    // 跳转</span><br><span class="line">                                    if ([[UIApplication sharedApplication] canOpenURL:[NSURL URLWithString:externNaviURL]]) &#123;</span><br><span class="line">                                        [[UIApplication sharedApplication] openURL:[NSURL URLWithString:externNaviURL]];</span><br><span class="line">                                    &#125;</span><br><span class="line">                                &#125;];</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>如果使用如搜狗等其他地图产品，可参阅其文档如法炮制即可。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;现在很多App都有地图导航功能，而实现导航两种实现方式：&lt;strong&gt;集成第三方SDK&lt;/strong&gt;、&lt;strong&gt;URL Sheme跳转第三方应用&lt;/strong&gt;，集成第三方SDK略显复杂，URL Sheme跳转相对简单，以下收集了腾讯地图、Google地图、高德地图、百度地图、系统地图的URL Sheme。&lt;/p&gt;
    
    </summary>
    
      <category term="开发笔记" scheme="http://yoursite.com/categories/%E5%BC%80%E5%8F%91%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="iOS" scheme="http://yoursite.com/tags/iOS/"/>
    
  </entry>
  
  <entry>
    <title>Hexo博客使用Git解决同步及迁移问题</title>
    <link href="http://yoursite.com/2018/07/23/Hexo%E5%8D%9A%E5%AE%A2%E4%BD%BF%E7%94%A8Git%E8%A7%A3%E5%86%B3%E5%90%8C%E6%AD%A5%E5%8F%8A%E8%BF%81%E7%A7%BB%E9%97%AE%E9%A2%98/"/>
    <id>http://yoursite.com/2018/07/23/Hexo博客使用Git解决同步及迁移问题/</id>
    <published>2018-07-23T08:35:19.000Z</published>
    <updated>2021-09-01T09:49:49.712Z</updated>
    
    <content type="html"><![CDATA[<p>由于hexo没有后台，而且全部文件都在本地生成，github和vps只是部署的生成的静态文件，所以在公司和家里有两台Mac设备或者换新电脑的时候，想更新blog，就无法同步或根本没有以前的博文了。那么就急需hexo源文件的同步及版本管理。</p><a id="more"></a><h1 id="建立一个远程git仓库"><a href="#建立一个远程git仓库" class="headerlink" title="建立一个远程git仓库"></a>建立一个远程git仓库</h1><p>由于存放的是hexo源文件，里面的配置文件包含个人信息，如果不是很在意可以直接存放在GitHub上，我选择了存放于私有仓库，免费提供私有仓库诸如：oschina，bitbucket、coding等。<br>以oschina为例，首先osc上添加公钥，建立新respository。</p><h2 id="编辑-gitignore文件"><a href="#编辑-gitignore文件" class="headerlink" title="编辑.gitignore文件"></a>编辑.gitignore文件</h2><p>blog根目录下的.gitignore是hexo初始化带来的，可以先删除或者直接编辑，对hexo不会有影响。将.gitignore修改为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">/.deploy_git</span><br><span class="line">/public</span><br></pre></td></tr></table></figure><ul><li>.deploy_git是hexo默认的.git配置文件夹，也是生成和部署的静态文件，不需要同步</li><li>public内文件是根据source文件夹内容自动生成，不需要备份</li></ul><h2 id="删除-git文件夹"><a href="#删除-git文件夹" class="headerlink" title="删除.git文件夹"></a>删除.git文件夹</h2><p>有些插件或者主题是git clone安装的，每个文件夹下都会有对应的.git文件夹，要删除掉，否则会和blog仓库冲突，.git文件夹被删除后整个文件对应的git仓库状态也会被清空。</p><h2 id="将blog加入git管理"><a href="#将blog加入git管理" class="headerlink" title="将blog加入git管理"></a>将blog加入git管理</h2><p>在blog根目录下执行：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git init</span><br><span class="line">git add .</span><br><span class="line">it commit -m &quot;first commit&quot;</span><br></pre></td></tr></table></figure><h2 id="添加远程仓库及上传备份"><a href="#添加远程仓库及上传备份" class="headerlink" title="添加远程仓库及上传备份"></a>添加远程仓库及上传备份</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git remote add origin git@xxxxx:xxxx.git</span><br><span class="line">git push -u origin master</span><br></pre></td></tr></table></figure><p>检查所有文件是否已经完整上传，如果有空的文件夹，说明没有被git追踪到，可能是没有在<code>git init</code>之前删除.git文件夹导致，删除文件夹，重新<code>git add 文件夹</code>即可。至此，云端备份完成。</p><h1 id="同步及迁移操作"><a href="#同步及迁移操作" class="headerlink" title="同步及迁移操作"></a>同步及迁移操作</h1><h2 id="文章同步"><a href="#文章同步" class="headerlink" title="文章同步"></a>文章同步</h2><p>当写完文章<code>hexo d</code>后记得保存修改并推送云端：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git add .</span><br><span class="line">git commit -m &apos;更新&apos;</span><br><span class="line">git push</span><br></pre></td></tr></table></figure><h2 id="迁移操作"><a href="#迁移操作" class="headerlink" title="迁移操作"></a>迁移操作</h2><p>当换到了一台新电脑时：</p><ol><li>安装Git，并配置github账号下的新电脑的.ssh，若hexo还部署有在vps的，vps也要更新.ssh</li><li>安装Node.js</li><li>使用npm指令安装Hexo</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure><p>创建blog文件夹并执行：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git init</span><br><span class="line">git clone git@xxxxx:xxxx.git</span><br></pre></td></tr></table></figure><p>现在，新旧电脑的hexo环境一致，博客源文件一致，迁移完成。<br>若git命令操作麻烦，可使用多种git的UI工具，现在blog就像代码一样轻松管理了。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;由于hexo没有后台，而且全部文件都在本地生成，github和vps只是部署的生成的静态文件，所以在公司和家里有两台Mac设备或者换新电脑的时候，想更新blog，就无法同步或根本没有以前的博文了。那么就急需hexo源文件的同步及版本管理。&lt;/p&gt;
    
    </summary>
    
      <category term="建站日记" scheme="http://yoursite.com/categories/%E5%BB%BA%E7%AB%99%E6%97%A5%E8%AE%B0/"/>
    
    
      <category term="Hexo" scheme="http://yoursite.com/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>Hexo博客使用Git部署VPS</title>
    <link href="http://yoursite.com/2018/07/17/Hexo%E5%8D%9A%E5%AE%A2%E4%BD%BF%E7%94%A8Git%E9%83%A8%E7%BD%B2VPS/"/>
    <id>http://yoursite.com/2018/07/17/Hexo博客使用Git部署VPS/</id>
    <published>2018-07-17T08:10:41.000Z</published>
    <updated>2021-09-01T09:49:49.713Z</updated>
    
    <content type="html"><![CDATA[<p>搬瓦工VPS已经用了3年了，一直用做科学上网使用，感觉浪费了。以前也一直用的印象笔记做记录，几经思考之下，觉得还是搭建一个自己的博客网站吧。</p><a id="more"></a><h1 id="基本思路"><a href="#基本思路" class="headerlink" title="基本思路"></a>基本思路</h1><ul><li>本地安装Hexo并建站</li><li>Hexo生成博客静态文件，使用git上传至VPS的git仓库</li><li>VPS的git仓库收到git push后，通过git hook触发shell脚本</li><li>shell脚本将git push过来的网页静态文件复制到已经配置好nginx的文件目录下</li><li>通过nginx转发，则可以正常访问博客</li></ul><h1 id="本地安装Hexo并建站"><a href="#本地安装Hexo并建站" class="headerlink" title="本地安装Hexo并建站"></a>本地安装Hexo并建站</h1><p><a href="https://hexo.io/zh-cn/" target="_blank" rel="noopener">Hexo</a>是一个快速、简洁且高效的博客框架。Hexo使用Markdown(或其他渲染引擎)解析文章，在几秒内，即可利用靓丽的主题生成静态网页。</p><p>根据hexo文档提示：hexo是需要nodejs和git的，我使用的是Mac，并安装了Xcode（自带git），而安装nodejs则推荐使用homebrew。</p><h2 id="安装homebrew"><a href="#安装homebrew" class="headerlink" title="安装homebrew"></a>安装homebrew</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ruby -e &quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)&quot;</span><br></pre></td></tr></table></figure><h2 id="安装nodejs"><a href="#安装nodejs" class="headerlink" title="安装nodejs"></a>安装nodejs</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install node</span><br></pre></td></tr></table></figure><h2 id="安装hexo"><a href="#安装hexo" class="headerlink" title="安装hexo"></a>安装hexo</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo npm install -g hexo</span><br></pre></td></tr></table></figure><h2 id="创建文件夹，建站"><a href="#创建文件夹，建站" class="headerlink" title="创建文件夹，建站"></a>创建文件夹，建站</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mkdir blog</span><br><span class="line">cd blog</span><br><span class="line">hexo init</span><br></pre></td></tr></table></figure><p>现在，本地建站就完成了。</p><h1 id="VPS环境配置"><a href="#VPS环境配置" class="headerlink" title="VPS环境配置"></a>VPS环境配置</h1><p>由于我使用的Centos 7，需要安装Vim和Git（默认都没安装）</p><h2 id="安装Vim"><a href="#安装Vim" class="headerlink" title="安装Vim"></a>安装Vim</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install vim</span><br></pre></td></tr></table></figure><h2 id="安装Git"><a href="#安装Git" class="headerlink" title="安装Git"></a>安装Git</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install git</span><br></pre></td></tr></table></figure><h2 id="新建git用户"><a href="#新建git用户" class="headerlink" title="新建git用户"></a>新建git用户</h2><h3 id="添加用户"><a href="#添加用户" class="headerlink" title="添加用户"></a>添加用户</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">adduser git</span><br></pre></td></tr></table></figure><h3 id="修改密码"><a href="#修改密码" class="headerlink" title="修改密码"></a>修改密码</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">passwd git</span><br></pre></td></tr></table></figure><h3 id="配置git用户"><a href="#配置git用户" class="headerlink" title="配置git用户"></a>配置git用户</h3><p>先切换到git用户下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">su git</span><br></pre></td></tr></table></figure><p>配置SSH</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">cd /home/git</span><br><span class="line"># 创建.ssh目录</span><br><span class="line">mkdir .ssh</span><br><span class="line"># 修改权限，禁用密码登录</span><br><span class="line">chmod 700 .ssh</span><br><span class="line">cd .ssh</span><br><span class="line">vim authorized_keys</span><br></pre></td></tr></table></figure><p>本地执行：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat ~/.ssh/id_rsa.pub</span><br></pre></td></tr></table></figure><p>查看公钥，收集所有需要登录的用户的公钥，将所有公钥导入(复制)到authorized_keys中，保存退出。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 修改权限</span><br><span class="line">chmod 600 authorized_keys</span><br></pre></td></tr></table></figure><h2 id="建立git仓库"><a href="#建立git仓库" class="headerlink" title="建立git仓库"></a>建立git仓库</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">cd /home/git</span><br><span class="line">mkdir blog.git</span><br><span class="line">cd blog.git</span><br><span class="line"># 使用--bare参数初始化，不包含工作区</span><br><span class="line">git init --bare</span><br></pre></td></tr></table></figure><h2 id="配置Git-Hooks"><a href="#配置Git-Hooks" class="headerlink" title="配置Git Hooks"></a>配置Git Hooks</h2><p>创建网站目录：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">cd /var/www/</span><br><span class="line"># 需要切换到root用户下，创建目录</span><br><span class="line">su root</span><br><span class="line">mkdir blog</span><br><span class="line"># 并将目录所有权交给git用户</span><br><span class="line">chown -R git:git -R /var/www/blog</span><br></pre></td></tr></table></figure><p>创建post-receive文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 需要切换到git用户下操作</span><br><span class="line">su git</span><br><span class="line">cd /home/git/blog.git/hooks</span><br><span class="line">vim post-receive</span><br></pre></td></tr></table></figure><p>复制shell脚本到post-receive文件中：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line">GIT_REPO=/home/git/blog.git</span><br><span class="line">TMP_GIT_CLONE=/tmp/blog</span><br><span class="line">PUBLIC_WWW=/var/www/blog</span><br><span class="line">rm -rf $&#123;TMP_GIT_CLONE&#125;</span><br><span class="line">git clone $GIT_REPO $TMP_GIT_CLONE</span><br><span class="line">rm -rf $&#123;PUBLIC_WWW&#125;/*</span><br><span class="line">cp -rf $&#123;TMP_GIT_CLONE&#125;/* $&#123;PUBLIC_WWW&#125;</span><br></pre></td></tr></table></figure><p>当git push到vps的git仓库时，触发这段shell脚本可以实现完全更新，即先删除原网站内所有内容，再拷贝新仓库内容到网站目录，可以避免一些不必要的问题。<br>最后给shell脚本加上执行权限：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod +x post-receive</span><br></pre></td></tr></table></figure><h2 id="安装Nginx"><a href="#安装Nginx" class="headerlink" title="安装Nginx"></a>安装Nginx</h2><p>默认情况Centos 7中无Nginx的源，最近发现Nginx官网提供了Centos的源地址。因此可以如下执行命令添加源：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo rpm -Uvh http://nginx.org/packages/centos/7/noarch/RPMS/nginx-release-centos-7-0.el7.ngx.noarch.rpm</span><br></pre></td></tr></table></figure><p>安装</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install nginx</span><br></pre></td></tr></table></figure><p>若输入<code>nginx -V</code>可以看到nginx版本信息，则安装成功。</p><p>配置nginx</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/nginx/conf.d/blog.conf</span><br></pre></td></tr></table></figure><p>录入：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"># blog.conf</span><br><span class="line">server &#123;</span><br><span class="line">  listen 80;</span><br><span class="line">  root /var/www/blog;</span><br><span class="line">  index index.htm index.html index.php;</span><br><span class="line">  server_name blog.jlancer.info localhost;</span><br><span class="line">  location / &#123;</span><br><span class="line">    try_files $uri $uri/ /index.html;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>设置开机启动：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl enable nginx.service</span><br></pre></td></tr></table></figure><p>启动：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl start nginx.service</span><br></pre></td></tr></table></figure><p>其他关于nginx命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">systemctl status nginx.service</span><br><span class="line">systemctl stop nginx.service</span><br><span class="line">systemctl restart nginx.service</span><br></pre></td></tr></table></figure><p>注意不同系统命令可能不同。</p><h2 id="禁用shell登录"><a href="#禁用shell登录" class="headerlink" title="禁用shell登录"></a>禁用shell登录</h2><p>处于安全的考虑，创建的git用户不允许登录shell：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># root用户下</span><br><span class="line">su root</span><br><span class="line">vim /etc/passwd</span><br></pre></td></tr></table></figure><p>将最后几行中的：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git:x:1000:1000::/home/git:/bin/bash</span><br></pre></td></tr></table></figure><p>改为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git:x:1000:1000::/home/git:/usr/bin/git-shell</span><br></pre></td></tr></table></figure><p>这样，git用户可以正常通过ssh使用git，但无法登录shell，因为我们为git用户指定的git-shell每次一登录就自动退出。</p><h1 id="本地操作"><a href="#本地操作" class="headerlink" title="本地操作"></a>本地操作</h1><p>搬瓦工VPS的ssh默认端口一般都没有设置22，连接就需要在后面加上<code>-p 端口号</code>，或者在.ssh文件夹下创建一个config文件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Host 服务器IP</span><br><span class="line">HostName 服务器IP</span><br><span class="line">User git</span><br><span class="line">Port 端口号</span><br><span class="line">IdentityFile ~/.ssh/id_rsa</span><br></pre></td></tr></table></figure><h2 id="尝试连接git："><a href="#尝试连接git：" class="headerlink" title="尝试连接git："></a>尝试连接git：</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh git@VPS的ip</span><br></pre></td></tr></table></figure><p>出现：</p><p><img src="https://raw.githubusercontent.com/jlancer/MyPictureBed/master/blogs/6954abd3ly1fxujefztxhj20nc02awen.jpg" alt="Terminal截图"></p><p>说明连接成功，由于取消了git的shell登录，所以连接被取消。</p><h2 id="最后配置Hexo"><a href="#最后配置Hexo" class="headerlink" title="最后配置Hexo"></a>最后配置Hexo</h2><p>打开本地博客根目录下的_config.yml文件，找到最后的deploy配置，修改为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">    type: git</span><br><span class="line">    repo: git@VPS的IP:blog.git</span><br><span class="line">    branch: master</span><br><span class="line">    # 还可以同时部署到github</span><br><span class="line">    type: git</span><br><span class="line">    repo: git@github.com:xxxx/xxxx.github.io.git</span><br><span class="line">    branch: master</span><br></pre></td></tr></table></figure><p>现在，使用<code>hexo d</code>就可轻松部署到vps上了。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;搬瓦工VPS已经用了3年了，一直用做科学上网使用，感觉浪费了。以前也一直用的印象笔记做记录，几经思考之下，觉得还是搭建一个自己的博客网站吧。&lt;/p&gt;
    
    </summary>
    
      <category term="建站日记" scheme="http://yoursite.com/categories/%E5%BB%BA%E7%AB%99%E6%97%A5%E8%AE%B0/"/>
    
    
      <category term="Hexo" scheme="http://yoursite.com/tags/Hexo/"/>
    
      <category term="VPS" scheme="http://yoursite.com/tags/VPS/"/>
    
  </entry>
  
</feed>
